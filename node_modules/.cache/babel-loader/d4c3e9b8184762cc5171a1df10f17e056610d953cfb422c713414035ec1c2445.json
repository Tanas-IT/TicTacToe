{"ast":null,"code":"export function calculateWinner(cells) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const isFull = cells.every(item => item !== null);\n  for (let index = 0; index < lines.length; index++) {\n    const [a, b, c] = lines[index];\n    if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\n      return cells[a];\n    }\n  }\n  if (isFull) {\n    return \"Draw\";\n  }\n  return null;\n}","map":{"version":3,"names":["calculateWinner","cells","lines","isFull","every","item","index","length","a","b","c"],"sources":["D:/React-Git/TicTacToe/my-app/src/helpers.js"],"sourcesContent":["export function calculateWinner(cells) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  const isFull = cells.every((item) => item !== null);\r\n  for (let index = 0; index < lines.length; index++) {\r\n    const [a, b, c] = lines[index];\r\n    if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {\r\n      return cells[a];\r\n    }\r\n  }\r\n  if (isFull) {\r\n    return \"Draw\";\r\n  }\r\n  return null;\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,eAAeA,CAACC,KAAK,EAAE;EACrC,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EACD,MAAMC,MAAM,GAAGF,KAAK,CAACG,KAAK,CAAEC,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;EACnD,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGJ,KAAK,CAACK,MAAM,EAAED,KAAK,EAAE,EAAE;IACjD,MAAM,CAACE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGR,KAAK,CAACI,KAAK,CAAC;IAC9B,IAAIL,KAAK,CAACO,CAAC,CAAC,IAAIP,KAAK,CAACO,CAAC,CAAC,KAAKP,KAAK,CAACQ,CAAC,CAAC,IAAIR,KAAK,CAACQ,CAAC,CAAC,KAAKR,KAAK,CAACS,CAAC,CAAC,EAAE;MAC9D,OAAOT,KAAK,CAACO,CAAC,CAAC;IACjB;EACF;EACA,IAAIL,MAAM,EAAE;IACV,OAAO,MAAM;EACf;EACA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}